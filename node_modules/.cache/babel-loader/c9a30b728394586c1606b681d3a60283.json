{"ast":null,"code":"var _jsxFileName = \"/Users/hanshuai/Desktop/\\u7B80\\u62A5/weather-report/src/map-demo.js\";\nimport React, { Component } from \"react\"; // import {Polygon} from \"react-amap\";\n\nimport PolygonData from \"./polygon\";\n\nclass WebMapDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.getPolygonValue = this.getPolygonValue.bind(this);\n    this.state = {\n      polygonData: []\n    };\n    const path = [];\n\n    for (let i = 0; i < this.state.polygonData.length; i++) {\n      for (let j = 0; j < this.state.polygonData[i].length; j++) {\n        this.state.path.push( //eslint-disable-next-line\n        new AMap.LngLat(this.state.polygonData[i][j][0], this.state.polygonData[i][j][1]));\n      }\n    }\n  }\n\n  componentDidMount() {\n    //eslint-disable-next-line\n    this.map = new AMap.Map('container', {\n      zoom: 4,\n      //地图初始化显示时候的缩放程度\n      showLabel: false,\n      //不显示地图文字标记\n      center: [124.25, 26.25] //设置地图中心点坐标\n\n    }); //eslint-disable-next-line\n\n    const polygon = new AMap.Polygon({\n      path: this.path,\n      fillColor: '#fff',\n      // 多边形填充颜色\n      borderWeight: 2,\n      // 线条宽度，默认为 1\n      strokeColor: 'black' // 线条颜色\n\n    });\n    this.map.add(polygon);\n  }\n\n  getPolygonValue(val) {\n    this.setState({\n      polygonData: val\n    });\n    console.log(this.state.polygonData);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(PolygonData, {\n      getPolygonValue: this.getPolygonValue,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default WebMapDemo;","map":{"version":3,"sources":["/Users/hanshuai/Desktop/简报/weather-report/src/map-demo.js"],"names":["React","Component","PolygonData","WebMapDemo","constructor","props","getPolygonValue","bind","state","polygonData","path","i","length","j","push","AMap","LngLat","componentDidMount","map","Map","zoom","showLabel","center","polygon","Polygon","fillColor","borderWeight","strokeColor","add","val","setState","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,WAAP,MAAwB,WAAxB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb;AAIA,UAAMC,IAAI,GAAG,EAAb;;AACI,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKH,KAAL,CAAWC,WAAX,CAAuBG,MAArC,EAA4CD,CAAC,EAA7C,EAAgD;AAC5C,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,KAAKL,KAAL,CAAWC,WAAX,CAAuBE,CAAvB,EAA0BC,MAAxC,EAA+CC,CAAC,EAAhD,EAAmD;AAC/C,aAAKL,KAAL,CAAWE,IAAX,CAAgBI,IAAhB,EAAuB;AACnB,YAAIC,IAAI,CAACC,MAAT,CAAgB,KAAKR,KAAL,CAAWC,WAAX,CAAuBE,CAAvB,EAA0BE,CAA1B,EAA6B,CAA7B,CAAhB,EAAgD,KAAKL,KAAL,CAAWC,WAAX,CAAuBE,CAAvB,EAA0BE,CAA1B,EAA6B,CAA7B,CAAhD,CADJ;AAEX;AACA;AACJ;;AAEDI,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKC,GAAL,GAAW,IAAIH,IAAI,CAACI,GAAT,CAAa,WAAb,EAA0B;AACjCC,MAAAA,IAAI,EAAE,CAD2B;AACzB;AACRC,MAAAA,SAAS,EAAE,KAFsB;AAEf;AAClBC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,CAHyB,CAGV;;AAHU,KAA1B,CAAX,CAFe,CAOf;;AACA,UAAMC,OAAO,GAAG,IAAIR,IAAI,CAACS,OAAT,CAAiB;AAC7Bd,MAAAA,IAAI,EAAE,KAAKA,IADkB;AAE7Be,MAAAA,SAAS,EAAE,MAFkB;AAEV;AACnBC,MAAAA,YAAY,EAAE,CAHe;AAGZ;AACjBC,MAAAA,WAAW,EAAE,OAJgB,CAIP;;AAJO,KAAjB,CAAhB;AAMA,SAAKT,GAAL,CAASU,GAAT,CAAaL,OAAb;AACF;;AAGFjB,EAAAA,eAAe,CAACuB,GAAD,EAAM;AACjB,SAAKC,QAAL,CAAc;AACVrB,MAAAA,WAAW,EAAEoB;AADH,KAAd;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKxB,KAAL,CAAWC,WAAvB;AAEH;;AAGDwB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,eAAe,EAAI,KAAK3B,eAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ;AAKH;;AAlD8B;;AAsDnC,eAAeH,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import {Polygon} from \"react-amap\";\nimport PolygonData from \"./polygon\";\n\nclass WebMapDemo extends Component {\n    constructor(props) {\n        super(props);\n        this.getPolygonValue = this.getPolygonValue.bind(this)\n        this.state = {\n            polygonData: [],\n        }\n\n        const path = [];\n            for(let i=0;i<this.state.polygonData.length;i++){\n                for(let j=0;j<this.state.polygonData[i].length;j++){\n                    this.state.path.push(  //eslint-disable-next-line\n                        new AMap.LngLat(this.state.polygonData[i][j][0],this.state.polygonData[i][j][1]))\n        }\n        }\n    }\n\n    componentDidMount(){\n        //eslint-disable-next-line\n        this.map = new AMap.Map('container', {\n            zoom: 4,//地图初始化显示时候的缩放程度\n            showLabel: false, //不显示地图文字标记\n            center: [124.25, 26.25]//设置地图中心点坐标\n        });\n        //eslint-disable-next-line\n        const polygon = new AMap.Polygon({\n            path: this.path,\n            fillColor: '#fff', // 多边形填充颜色\n            borderWeight: 2, // 线条宽度，默认为 1\n            strokeColor: 'black', // 线条颜色\n        });\n        this.map.add(polygon);\n     }\n\n\n    getPolygonValue(val) {\n        this.setState({\n            polygonData: val\n        })\n        console.log(this.state.polygonData)\n\n    }\n\n\n    render() {\n        return (\n            <div>\n                <PolygonData getPolygonValue = {this.getPolygonValue}/>\n            </div>\n    )\n    }\n\n}\n\nexport default WebMapDemo;"]},"metadata":{},"sourceType":"module"}