{"ast":null,"code":"var _jsxFileName = \"/Users/hanshuai/Desktop/\\u7B80\\u62A5/weather-report/src/map-demo.js\";\nimport React, { Component } from \"react\"; // import {Polygon} from \"react-amap\";\n// import PolygonData from \"./polygon\";\n\nimport axios from 'axios';\n\nclass WebMapDemo extends Component {\n  constructor(props) {\n    super(props); // this.getPolygonValue = this.getPolygonValue.bind(this)\n    // this.polygonStyle = this.polygonStyle.bind(this)\n\n    this.state = {\n      polygonData: {}\n    }; // const path = [];\n    //     for(let i=0;i<this.state.polygonData.length;i++){\n    //         for(let j=0;j<this.state.polygonData[i].length;j++){\n    //             this.state.path.push(  //eslint-disable-next-line\n    //                 new AMap.LngLat(this.state.polygonData[i][j][0],this.state.polygonData[i][j][1]))\n    // }\n    // }\n  } // ajax('test.json', (err, geoJSON) => {\n  //     if (!err) {\n  //         //eslint-disable-next-line\n  //         const geojson = new AMap.GeoJSON({\n  //             geoJSON: geoJSON,\n  //             // 还可以自定义getMarker和getPolyline\n  //             getPolygon: function(geojson, lnglats) {\n  //                 // 计算面积\n  //                 //eslint-disable-next-line\n  //                 var area = AMap.GeometryUtil.ringArea(lnglats[0])\n  //\n  //                 //eslint-disable-next-line\n  //                 return new AMap.Polygon({\n  //                     path: lnglats,\n  //                     fillOpacity: 1 - Math.sqrt(area / 8000000000),// 面积越大透明度越高\n  //                     strokeColor: 'white',\n  //                     fillColor: 'red'\n  //                 });\n  //             }\n  //         });\n  //         this.map.add(geojson);\n  //         log.success('GeoJSON 数据加载完成')\n  //     } else {\n  //         log.error('GeoJSON 服务请求失败')\n  //     }\n  // })\n  // polygonStyle(err, geoJSON) {\n  //     if (!err) {\n  //         //eslint-disable-next-line\n  //         const geojson = new AMap.GeoJSON({\n  //             geoJSON: geoJSON,\n  //             // 还可以自定义getMarker和getPolyline\n  //             getPolygon: function(geojson, lnglats) {\n  //                 // 计算面积\n  //                 //eslint-disable-next-line\n  //                 var area = AMap.GeometryUtil.ringArea(lnglats[0])\n  //\n  //                 //eslint-disable-next-line\n  //                 return new AMap.Polygon({\n  //                     path: lnglats,\n  //                     fillOpacity: 1 - Math.sqrt(area / 8000000000),// 面积越大透明度越高\n  //                     strokeColor: 'white',\n  //                     fillColor: 'red'\n  //                 });\n  //             }\n  //         });\n  //         this.map.add(geojson);\n  //         log.success('GeoJSON 数据加载完成')\n  //     } else {\n  //         log.error('GeoJSON 服务请求失败')\n  //     }\n  // }\n\n\n  componentDidMount() {\n    const url = 'https://a.amap.com/jsapi_demos/static/geojson/chongqing.json';\n    axios.get(url).then(response => {\n      console.log(response.data);\n      this.setState({\n        polygonData: response.data\n      });\n      console.log(this.state.polygonData);\n    }); //eslint-disable-next-line\n\n    this.map = new AMap.Map('container', {\n      zoom: 4,\n      //地图初始化显示时候的缩放程度\n      showLabel: false,\n      //不显示地图文字标记\n      center: [124.25, 26.25] //设置地图中心点坐标\n\n    }); // //eslint-disable-next-line\n    // const polygon = new AMap.Polygon({\n    //     path: this.path,\n    //     fillColor: '#fff', // 多边形填充颜色\n    //     borderWeight: 2, // 线条宽度，默认为 1\n    //     strokeColor: 'black', // 线条颜色\n    // });\n    // this.map.add(polygon);\n    //eslint-disable-next-line\n\n    this.geoJson = new AMap.GeoJSON({\n      geoJSON: this.state.polygonData,\n      // GeoJSON对象\n      getPolygon: function (geojson, lnglats) {\n        //还可以自定义getMarker和getPolyline\n        //eslint-disable-next-line\n        return new AMap.Polygon({\n          path: lnglats,\n          fillOpacity: .8,\n          strokeColor: 'white',\n          fillColor: 'red'\n        });\n      }\n    });\n    this.map.add(this.geoJson);\n  } // getPolygonValue(val) {\n  //     this.setState({\n  //         polygonData: val\n  //     })\n  //     console.log(this.state.polygonData)\n  //\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, \"null\");\n  }\n\n}\n\nexport default WebMapDemo;","map":{"version":3,"sources":["/Users/hanshuai/Desktop/简报/weather-report/src/map-demo.js"],"names":["React","Component","axios","WebMapDemo","constructor","props","state","polygonData","componentDidMount","url","get","then","response","console","log","data","setState","map","AMap","Map","zoom","showLabel","center","geoJson","GeoJSON","geoJSON","getPolygon","geojson","lnglats","Polygon","path","fillOpacity","strokeColor","fillColor","add","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AACA;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb,CAJe,CAQf;AACA;AACA;AACA;AACA;AACA;AACA;AACH,GAhB8B,CAkB/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,GAAG,GAAG,8DAAZ;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAUD,GAAV,EAAeE,IAAf,CACIC,QAAQ,IAAG;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,WAAKC,QAAL,CAAc;AAACT,QAAAA,WAAW,EAAEK,QAAQ,CAACG;AAAvB,OAAd;AACAF,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWC,WAAvB;AACH,KALL,EAFe,CASf;;AACA,SAAKU,GAAL,GAAW,IAAIC,IAAI,CAACC,GAAT,CAAa,WAAb,EAA0B;AACjCC,MAAAA,IAAI,EAAE,CAD2B;AACzB;AACRC,MAAAA,SAAS,EAAE,KAFsB;AAEf;AAClBC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,CAHyB,CAGV;;AAHU,KAA1B,CAAX,CAVe,CAef;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAAKC,OAAL,GAAe,IAAIL,IAAI,CAACM,OAAT,CAAiB;AAC5BC,MAAAA,OAAO,EAAE,KAAKnB,KAAL,CAAWC,WADQ;AACO;AACnCmB,MAAAA,UAAU,EAAG,UAASC,OAAT,EAAkBC,OAAlB,EAA2B;AAAC;AACrC;AACA,eAAO,IAAIV,IAAI,CAACW,OAAT,CAAiB;AACpBC,UAAAA,IAAI,EAAEF,OADc;AAEpBG,UAAAA,WAAW,EAAE,EAFO;AAGpBC,UAAAA,WAAW,EAAC,OAHQ;AAIpBC,UAAAA,SAAS,EAAC;AAJU,SAAjB,CAAP;AAMH;AAV2B,KAAjB,CAAf;AAaA,SAAKhB,GAAL,CAASiB,GAAT,CAAa,KAAKX,OAAlB;AACF,GA7G6B,CAgH/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAY,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AAhI8B;;AAoInC,eAAehC,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import {Polygon} from \"react-amap\";\n// import PolygonData from \"./polygon\";\nimport axios from 'axios';\n\nclass WebMapDemo extends Component {\n    constructor(props) {\n        super(props);\n        // this.getPolygonValue = this.getPolygonValue.bind(this)\n        // this.polygonStyle = this.polygonStyle.bind(this)\n        this.state = {\n            polygonData: {}\n        }\n\n        // const path = [];\n        //     for(let i=0;i<this.state.polygonData.length;i++){\n        //         for(let j=0;j<this.state.polygonData[i].length;j++){\n        //             this.state.path.push(  //eslint-disable-next-line\n        //                 new AMap.LngLat(this.state.polygonData[i][j][0],this.state.polygonData[i][j][1]))\n        // }\n        // }\n    }\n\n    // ajax('test.json', (err, geoJSON) => {\n    //     if (!err) {\n    //         //eslint-disable-next-line\n    //         const geojson = new AMap.GeoJSON({\n    //             geoJSON: geoJSON,\n    //             // 还可以自定义getMarker和getPolyline\n    //             getPolygon: function(geojson, lnglats) {\n    //                 // 计算面积\n    //                 //eslint-disable-next-line\n    //                 var area = AMap.GeometryUtil.ringArea(lnglats[0])\n    //\n    //                 //eslint-disable-next-line\n    //                 return new AMap.Polygon({\n    //                     path: lnglats,\n    //                     fillOpacity: 1 - Math.sqrt(area / 8000000000),// 面积越大透明度越高\n    //                     strokeColor: 'white',\n    //                     fillColor: 'red'\n    //                 });\n    //             }\n    //         });\n    //         this.map.add(geojson);\n    //         log.success('GeoJSON 数据加载完成')\n    //     } else {\n    //         log.error('GeoJSON 服务请求失败')\n    //     }\n    // })\n    // polygonStyle(err, geoJSON) {\n    //     if (!err) {\n    //         //eslint-disable-next-line\n    //         const geojson = new AMap.GeoJSON({\n    //             geoJSON: geoJSON,\n    //             // 还可以自定义getMarker和getPolyline\n    //             getPolygon: function(geojson, lnglats) {\n    //                 // 计算面积\n    //                 //eslint-disable-next-line\n    //                 var area = AMap.GeometryUtil.ringArea(lnglats[0])\n    //\n    //                 //eslint-disable-next-line\n    //                 return new AMap.Polygon({\n    //                     path: lnglats,\n    //                     fillOpacity: 1 - Math.sqrt(area / 8000000000),// 面积越大透明度越高\n    //                     strokeColor: 'white',\n    //                     fillColor: 'red'\n    //                 });\n    //             }\n    //         });\n    //         this.map.add(geojson);\n    //         log.success('GeoJSON 数据加载完成')\n    //     } else {\n    //         log.error('GeoJSON 服务请求失败')\n    //     }\n    // }\n\n    componentDidMount(){\n        const url = 'https://a.amap.com/jsapi_demos/static/geojson/chongqing.json'\n        axios.get(url).then(\n            response =>{\n                console.log(response.data)\n                this.setState({polygonData: response.data})\n                console.log(this.state.polygonData)\n            }\n        )\n        //eslint-disable-next-line\n        this.map = new AMap.Map('container', {\n            zoom: 4,//地图初始化显示时候的缩放程度\n            showLabel: false, //不显示地图文字标记\n            center: [124.25, 26.25]//设置地图中心点坐标\n        });\n        // //eslint-disable-next-line\n        // const polygon = new AMap.Polygon({\n        //     path: this.path,\n        //     fillColor: '#fff', // 多边形填充颜色\n        //     borderWeight: 2, // 线条宽度，默认为 1\n        //     strokeColor: 'black', // 线条颜色\n        // });\n        // this.map.add(polygon);\n        //eslint-disable-next-line\n        this.geoJson = new AMap.GeoJSON({\n            geoJSON: this.state.polygonData,   // GeoJSON对象\n            getPolygon:  function(geojson, lnglats) {//还可以自定义getMarker和getPolyline\n                //eslint-disable-next-line\n                return new AMap.Polygon({\n                    path: lnglats,\n                    fillOpacity: .8,\n                    strokeColor:'white',\n                    fillColor:'red'\n                });\n            }\n        });\n\n        this.map.add(this.geoJson);\n     }\n\n\n    // getPolygonValue(val) {\n    //     this.setState({\n    //         polygonData: val\n    //     })\n    //     console.log(this.state.polygonData)\n    //\n    // }\n\n\n    render() {\n        return (\n            <div>\n                {/*<PolygonData getPolygonValue = {this.getPolygonValue}/>*/}\n                null\n            </div>\n    )\n    }\n\n}\n\nexport default WebMapDemo;"]},"metadata":{},"sourceType":"module"}