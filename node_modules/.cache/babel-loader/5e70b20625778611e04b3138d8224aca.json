{"ast":null,"code":"import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass PolygonData extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      datas: []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'test.json';\n    axios.get(url).then(response => {\n      console.log(response.data.features[0].geometry.coordinates[0]);\n      const {\n        type,\n        crs,\n        features\n      } = response.data;\n      const str = features.map(content => {\n        return content.geometry.coordinates;\n      });\n      const strr = str.filter((value, index, array) => {\n        return value[1] == null;\n      });\n      const strrr3 = str.filter((value, index, array) => {\n        return value[0].length == 2;\n      });\n      const strrr4 = str.filter((value, index, array) => {\n        return value[0].length == 3;\n      });\n      const strrr5 = str.filter((value, index, array) => {\n        return value[0].length == 7;\n      });\n      const strrr1 = strr.filter((value, index, array) => {\n        return value[0].length == 1;\n      });\n      const strrr2 = strr.filter((value, index, array) => {\n        return value[0].length !== 1;\n      });\n      const data1 = strrr1.map(data11 => {\n        return data11[0][0];\n      });\n      console.log(strr);\n      console.log(str);\n      console.log(strrr1);\n      console.log(strrr2);\n      console.log(strrr3);\n      console.log(strrr4);\n      console.log(strrr5);\n      console.log(data1);\n      this.setState({\n        datas: data1\n      });\n      this.props.getPolygonValue(this.state.datas);\n    });\n  }\n\n  render() {\n    return null;\n  }\n\n}\n\nexport default PolygonData;","map":{"version":3,"sources":["/Users/hanshuai/Desktop/简报/weather-report/src/polygon.js"],"names":["React","Component","axios","PolygonData","constructor","props","state","datas","componentDidMount","url","get","then","response","console","log","data","features","geometry","coordinates","type","crs","str","map","content","strr","filter","value","index","array","strrr3","length","strrr4","strrr5","strrr1","strrr2","data1","data11","setState","getPolygonValue","render"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAIA,MAAMC,WAAN,SAA0BF,SAA1B,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AAGDC,EAAAA,iBAAiB,GAAE;AACf,UAAMC,GAAG,GAAG,WAAZ;AACAP,IAAAA,KAAK,CAACQ,GAAN,CAAUD,GAAV,EAAeE,IAAf,CACIC,QAAQ,IAAG;AACPC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,QAAd,CAAuB,CAAvB,EAA0BC,QAA1B,CAAmCC,WAAnC,CAA+C,CAA/C,CAAZ;AACA,YAAM;AAACC,QAAAA,IAAD;AAAMC,QAAAA,GAAN;AAAUJ,QAAAA;AAAV,UAAsBJ,QAAQ,CAACG,IAArC;AACA,YAAMM,GAAG,GAAGL,QAAQ,CAACM,GAAT,CAAcC,OAAD,IAAa;AAAC,eAAOA,OAAO,CAACN,QAAR,CAAiBC,WAAxB;AAAoC,OAA/D,CAAZ;AACA,YAAMM,IAAI,GAAGH,GAAG,CAACI,MAAJ,CAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAC7C,eAAOF,KAAK,CAAC,CAAD,CAAL,IAAY,IAAnB;AACH,OAFY,CAAb;AAGA,YAAMG,MAAM,GAAGR,GAAG,CAACI,MAAJ,CAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAC/C,eAAOF,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,IAAkB,CAAzB;AACH,OAFc,CAAf;AAGA,YAAMC,MAAM,GAAGV,GAAG,CAACI,MAAJ,CAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAC/C,eAAOF,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,IAAkB,CAAzB;AACH,OAFc,CAAf;AAGA,YAAME,MAAM,GAAGX,GAAG,CAACI,MAAJ,CAAW,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAC/C,eAAOF,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,IAAkB,CAAzB;AACH,OAFc,CAAf;AAGA,YAAMG,MAAM,GAAGT,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChD,eAAOF,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,IAAmB,CAA1B;AACH,OAFc,CAAf;AAGA,YAAMI,MAAM,GAAGV,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,KAAyB;AAChD,eAAOF,KAAK,CAAC,CAAD,CAAL,CAASI,MAAT,KAAoB,CAA3B;AACH,OAFc,CAAf;AAGA,YAAMK,KAAK,GAAGF,MAAM,CAACX,GAAP,CAAYc,MAAD,IAAY;AAAC,eAAOA,MAAM,CAAC,CAAD,CAAN,CAAU,CAAV,CAAP;AAAoB,OAA5C,CAAd;AACAvB,MAAAA,OAAO,CAACC,GAAR,CAAYU,IAAZ;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAYmB,MAAZ;AACApB,MAAAA,OAAO,CAACC,GAAR,CAAYoB,MAAZ;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAYe,MAAZ;AACAhB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,MAAZ;AACAlB,MAAAA,OAAO,CAACC,GAAR,CAAYkB,MAAZ;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAYqB,KAAZ;AACA,WAAKE,QAAL,CAAc;AAAC9B,QAAAA,KAAK,EAAE4B;AAAR,OAAd;AACA,WAAK9B,KAAL,CAAWiC,eAAX,CAA2B,KAAKhC,KAAL,CAAWC,KAAtC;AACH,KAlCL;AAoCH;;AAGDgC,EAAAA,MAAM,GAAE;AACJ,WACI,IADJ;AAGH;;AAtD8B;;AAyDnC,eAAepC,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\n\nclass PolygonData extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            datas: []\n        }\n    }\n\n\n    componentDidMount(){\n        const url = 'test.json'\n        axios.get(url).then(\n            response =>{\n                console.log(response.data.features[0].geometry.coordinates[0])\n                const {type,crs,features} = response.data\n                const str = features.map((content) => {return content.geometry.coordinates})\n                const strr = str.filter((value, index, array) => {\n                    return value[1] == null;\n                })\n                const strrr3 = str.filter((value, index, array) => {\n                    return value[0].length== 2;\n                })\n                const strrr4 = str.filter((value, index, array) => {\n                    return value[0].length== 3;\n                })\n                const strrr5 = str.filter((value, index, array) => {\n                    return value[0].length== 7;\n                })\n                const strrr1 = strr.filter((value, index, array) => {\n                    return value[0].length == 1;\n                })\n                const strrr2 = strr.filter((value, index, array) => {\n                    return value[0].length !== 1;\n                })\n                const data1 = strrr1.map((data11) => {return data11[0][0]})\n                console.log(strr)\n                console.log(str)\n                console.log(strrr1)\n                console.log(strrr2)\n                console.log(strrr3)\n                console.log(strrr4)\n                console.log(strrr5)\n                console.log(data1)\n                this.setState({datas: data1})\n                this.props.getPolygonValue(this.state.datas)\n            }\n        )\n    }\n\n\n    render(){\n        return (\n            null\n        )\n    }\n}\n\nexport default PolygonData;\n\n"]},"metadata":{},"sourceType":"module"}