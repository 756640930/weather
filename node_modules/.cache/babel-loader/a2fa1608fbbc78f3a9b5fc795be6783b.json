{"ast":null,"code":"var _jsxFileName = \"/Users/hanshuai/Desktop/\\u7B80\\u62A5/weather-report/src/map-demo.js\";\nimport React, { Component } from \"react\"; // import {Polygon} from \"react-amap\";\n// import PolygonData from \"./polygon\";\n\nclass WebMapDemo extends Component {\n  constructor(props) {\n    super(props); // this.getPolygonValue = this.getPolygonValue.bind(this)\n\n    this.state = {\n      polygonData: []\n    }; // const path = [];\n    //     for(let i=0;i<this.state.polygonData.length;i++){\n    //         for(let j=0;j<this.state.polygonData[i].length;j++){\n    //             this.state.path.push(  //eslint-disable-next-line\n    //                 new AMap.LngLat(this.state.polygonData[i][j][0],this.state.polygonData[i][j][1]))\n    // }\n    // }\n\n    ajax('test.json', function (err, geoJSON) {\n      if (!err) {\n        var geojson = new AMap.GeoJSON({\n          geoJSON: geoJSON,\n          // 还可以自定义getMarker和getPolyline\n          getPolygon: function (geojson, lnglats) {\n            // 计算面积\n            var area = AMap.GeometryUtil.ringArea(lnglats[0]);\n            return new AMap.Polygon({\n              path: lnglats,\n              fillOpacity: 1 - Math.sqrt(area / 8000000000),\n              // 面积越大透明度越高\n              strokeColor: 'white',\n              fillColor: 'red'\n            });\n          }\n        });\n        map.add(geojson);\n        log.success('GeoJSON 数据加载完成');\n      } else {\n        log.error('GeoJSON 服务请求失败');\n      }\n    });\n  }\n\n  componentDidMount() {\n    //eslint-disable-next-line\n    this.map = new AMap.Map('container', {\n      zoom: 4,\n      //地图初始化显示时候的缩放程度\n      showLabel: false,\n      //不显示地图文字标记\n      center: [124.25, 26.25] //设置地图中心点坐标\n\n    }); //eslint-disable-next-line\n\n    const polygon = new AMap.Polygon({\n      path: this.path,\n      fillColor: '#fff',\n      // 多边形填充颜色\n      borderWeight: 2,\n      // 线条宽度，默认为 1\n      strokeColor: 'black' // 线条颜色\n\n    });\n    this.map.add(polygon);\n  } // getPolygonValue(val) {\n  //     this.setState({\n  //         polygonData: val\n  //     })\n  //     console.log(this.state.polygonData)\n  //\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, \"null\");\n  }\n\n}\n\nexport default WebMapDemo;","map":{"version":3,"sources":["/Users/hanshuai/Desktop/简报/weather-report/src/map-demo.js"],"names":["React","Component","WebMapDemo","constructor","props","state","polygonData","ajax","err","geoJSON","geojson","AMap","GeoJSON","getPolygon","lnglats","area","GeometryUtil","ringArea","Polygon","path","fillOpacity","Math","sqrt","strokeColor","fillColor","map","add","log","success","error","componentDidMount","Map","zoom","showLabel","center","polygon","borderWeight","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;AACA;;AAEA,MAAMC,UAAN,SAAyBD,SAAzB,CAAmC;AAC/BE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,WAAW,EAAE;AADJ,KAAb,CAHe,CAOf;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,IAAAA,IAAI,CAAC,WAAD,EAAc,UAASC,GAAT,EAAcC,OAAd,EAAuB;AACrC,UAAI,CAACD,GAAL,EAAU;AACN,YAAIE,OAAO,GAAG,IAAIC,IAAI,CAACC,OAAT,CAAiB;AAC3BH,UAAAA,OAAO,EAAEA,OADkB;AAE3B;AACAI,UAAAA,UAAU,EAAE,UAASH,OAAT,EAAkBI,OAAlB,EAA2B;AACnC;AACA,gBAAIC,IAAI,GAAGJ,IAAI,CAACK,YAAL,CAAkBC,QAAlB,CAA2BH,OAAO,CAAC,CAAD,CAAlC,CAAX;AAEA,mBAAO,IAAIH,IAAI,CAACO,OAAT,CAAiB;AACpBC,cAAAA,IAAI,EAAEL,OADc;AAEpBM,cAAAA,WAAW,EAAE,IAAIC,IAAI,CAACC,IAAL,CAAUP,IAAI,GAAG,UAAjB,CAFG;AAE0B;AAC9CQ,cAAAA,WAAW,EAAE,OAHO;AAIpBC,cAAAA,SAAS,EAAE;AAJS,aAAjB,CAAP;AAMH;AAb0B,SAAjB,CAAd;AAeAC,QAAAA,GAAG,CAACC,GAAJ,CAAQhB,OAAR;AACAiB,QAAAA,GAAG,CAACC,OAAJ,CAAY,gBAAZ;AACH,OAlBD,MAkBO;AACHD,QAAAA,GAAG,CAACE,KAAJ,CAAU,gBAAV;AACH;AACJ,KAtBG,CAAJ;AAuBH;;AAEDC,EAAAA,iBAAiB,GAAE;AACf;AACA,SAAKL,GAAL,GAAW,IAAId,IAAI,CAACoB,GAAT,CAAa,WAAb,EAA0B;AACjCC,MAAAA,IAAI,EAAE,CAD2B;AACzB;AACRC,MAAAA,SAAS,EAAE,KAFsB;AAEf;AAClBC,MAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,KAAT,CAHyB,CAGV;;AAHU,KAA1B,CAAX,CAFe,CAOf;;AACA,UAAMC,OAAO,GAAG,IAAIxB,IAAI,CAACO,OAAT,CAAiB;AAC7BC,MAAAA,IAAI,EAAE,KAAKA,IADkB;AAE7BK,MAAAA,SAAS,EAAE,MAFkB;AAEV;AACnBY,MAAAA,YAAY,EAAE,CAHe;AAGZ;AACjBb,MAAAA,WAAW,EAAE,OAJgB,CAIP;;AAJO,KAAjB,CAAhB;AAMA,SAAKE,GAAL,CAASC,GAAT,CAAaS,OAAb;AACF,GAvD6B,CA0D/B;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGAE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAMH;;AA1E8B;;AA8EnC,eAAenC,UAAf","sourcesContent":["import React, { Component } from \"react\";\n// import {Polygon} from \"react-amap\";\n// import PolygonData from \"./polygon\";\n\nclass WebMapDemo extends Component {\n    constructor(props) {\n        super(props);\n        // this.getPolygonValue = this.getPolygonValue.bind(this)\n        this.state = {\n            polygonData: [],\n        }\n\n        // const path = [];\n        //     for(let i=0;i<this.state.polygonData.length;i++){\n        //         for(let j=0;j<this.state.polygonData[i].length;j++){\n        //             this.state.path.push(  //eslint-disable-next-line\n        //                 new AMap.LngLat(this.state.polygonData[i][j][0],this.state.polygonData[i][j][1]))\n        // }\n        // }\n        ajax('test.json', function(err, geoJSON) {\n            if (!err) {\n                var geojson = new AMap.GeoJSON({\n                    geoJSON: geoJSON,\n                    // 还可以自定义getMarker和getPolyline\n                    getPolygon: function(geojson, lnglats) {\n                        // 计算面积\n                        var area = AMap.GeometryUtil.ringArea(lnglats[0])\n\n                        return new AMap.Polygon({\n                            path: lnglats,\n                            fillOpacity: 1 - Math.sqrt(area / 8000000000),// 面积越大透明度越高\n                            strokeColor: 'white',\n                            fillColor: 'red'\n                        });\n                    }\n                });\n                map.add(geojson);\n                log.success('GeoJSON 数据加载完成')\n            } else {\n                log.error('GeoJSON 服务请求失败')\n            }\n        })\n    }\n\n    componentDidMount(){\n        //eslint-disable-next-line\n        this.map = new AMap.Map('container', {\n            zoom: 4,//地图初始化显示时候的缩放程度\n            showLabel: false, //不显示地图文字标记\n            center: [124.25, 26.25]//设置地图中心点坐标\n        });\n        //eslint-disable-next-line\n        const polygon = new AMap.Polygon({\n            path: this.path,\n            fillColor: '#fff', // 多边形填充颜色\n            borderWeight: 2, // 线条宽度，默认为 1\n            strokeColor: 'black', // 线条颜色\n        });\n        this.map.add(polygon);\n     }\n\n\n    // getPolygonValue(val) {\n    //     this.setState({\n    //         polygonData: val\n    //     })\n    //     console.log(this.state.polygonData)\n    //\n    // }\n\n\n    render() {\n        return (\n            <div>\n                {/*<PolygonData getPolygonValue = {this.getPolygonValue}/>*/}\n                null\n            </div>\n    )\n    }\n\n}\n\nexport default WebMapDemo;"]},"metadata":{},"sourceType":"module"}