{"ast":null,"code":"var _jsxFileName = \"/Users/hanshuai/Desktop/\\u7B80\\u62A5/weather-report/src/map-demo.js\";\nimport React, { Component } from \"react\";\nimport axios from 'axios';\n\nclass WebMapDemo extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      waveLevel: [{\n        min: -50,\n        max: 0.25,\n        val: \"#0cecfa\"\n      }, {\n        min: 0.25,\n        max: 0.5,\n        val: \"#0cd6fa\"\n      }, {\n        min: 0.5,\n        max: 0.75,\n        val: \"#0cc5fa\"\n      }, {\n        min: 0.75,\n        max: 1,\n        val: \"#0cb4fa\"\n      }, {\n        min: 1,\n        max: 1.25,\n        val: \"#0ca3fa\"\n      }, {\n        min: 1.25,\n        max: 1.5,\n        val: \"#0c98fa\"\n      }, {\n        min: 1.5,\n        max: 1.75,\n        val: \"#0c8dfa\"\n      }, {\n        min: 1.75,\n        max: 2,\n        val: \"#0c7cfa\"\n      }, {\n        min: 2,\n        max: 2.25,\n        val: \"#0c71fa\"\n      }, {\n        min: 2.25,\n        max: 2.5,\n        val: \"#0c60fa\"\n      }, {\n        min: 2.5,\n        max: 2.75,\n        val: \"#0c49fa\"\n      }, {\n        min: 2.75,\n        max: 3,\n        val: \"#f8fd30\"\n      }, {\n        min: 3,\n        max: 3.25,\n        val: \"#faf123\"\n      }, {\n        min: 3.25,\n        max: 3.5,\n        val: \"#fce515\"\n      }, {\n        min: 3.5,\n        max: 3.75,\n        val: \"#fddf0f\"\n      }, {\n        min: 3.75,\n        max: 4,\n        val: \"#ffcc00\"\n      }, {\n        min: 4,\n        max: 4.25,\n        val: \"#ffba00\"\n      }, {\n        min: 4.25,\n        max: 4.5,\n        val: \"#fe9e00\"\n      }, {\n        min: 4.5,\n        max: 4.75,\n        val: \"#f78b00\"\n      }, {\n        min: 4.75,\n        max: 5,\n        val: \"#f17700\"\n      }, {\n        min: 5,\n        max: 5.25,\n        val: \"#ef7100\"\n      }, {\n        min: 5.25,\n        max: 5.5,\n        val: \"#f56925\"\n      }, {\n        min: 5.5,\n        max: 5.75,\n        val: \"#f55f16\"\n      }, {\n        min: 5.75,\n        max: 6,\n        val: \"#f35508\"\n      }, {\n        min: 6,\n        max: 6.25,\n        val: \"#e84c00\"\n      }, {\n        min: 6.25,\n        max: 6.5,\n        val: \"#fd002a\"\n      }, {\n        min: 6.5,\n        max: 6.75,\n        val: \"#f30128\"\n      }, {\n        min: 6.75,\n        max: 7,\n        val: \"#ee0127\"\n      }, {\n        min: 7,\n        max: 7.25,\n        val: \"#e40225\"\n      }, {\n        min: 7.25,\n        max: 7.5,\n        val: \"#d60323\"\n      }, {\n        min: 7.5,\n        max: 7.75,\n        val: \"#c50f2b\"\n      }, {\n        min: 7.75,\n        max: 8,\n        val: \"#ac182b\"\n      }, {\n        min: 8,\n        max: 8.25,\n        val: \"#9d1626\"\n      }, {\n        min: 8.25,\n        max: 8.5,\n        val: \"#931522\"\n      }, {\n        min: 8.5,\n        max: 8.75,\n        val: \"#8a141f\"\n      }, {\n        min: 8.75,\n        max: 9,\n        val: \"#7c121a\"\n      }, {\n        min: 9,\n        max: 9.25,\n        val: \"#6d1015\"\n      }, {\n        min: 9.25,\n        max: 9.5,\n        val: \"#fe229a\"\n      }, {\n        min: 9.5,\n        max: 9.75,\n        val: \"#f6209f\"\n      }, {\n        min: 9.75,\n        max: 10,\n        val: \"#f01ea1\"\n      }, {\n        min: 10,\n        max: 10.25,\n        val: \"#ed1ea3\"\n      }, {\n        min: 10.25,\n        max: 10.5,\n        val: \"#e81ca5\"\n      }, {\n        min: 10.5,\n        max: 10.75,\n        val: \"#e01aaa\"\n      }, {\n        min: 10.75,\n        max: 11,\n        val: \"#d918ad\"\n      }, {\n        min: 11,\n        max: 11.25,\n        val: \"#d317b1\"\n      }, {\n        min: 11.25,\n        max: 11.5,\n        val: \"#ce16b3\"\n      }, {\n        min: 11.5,\n        max: 11.75,\n        val: \"#c613b7\"\n      }, {\n        min: 11.75,\n        max: 12,\n        val: \"#bd11bc\"\n      }, {\n        min: 12,\n        max: 12.25,\n        val: \"#b610bf\"\n      }, {\n        min: 12.25,\n        max: 12.5,\n        val: \"#b00ec2\"\n      }, {\n        min: 12.5,\n        max: 12.75,\n        val: \"#ab0dc5\"\n      }, {\n        min: 12.75,\n        max: 13,\n        val: \"#9e09cc\"\n      }, {\n        min: 13,\n        max: 13.25,\n        val: \"#9507d0\"\n      }, {\n        min: 13.25,\n        max: 13.5,\n        val: \"#8d08c4\"\n      }, {\n        min: 13.5,\n        max: 13.75,\n        val: \"#8205b6\"\n      }, {\n        min: 13.75,\n        max: 14,\n        val: \"#7b07ab\"\n      }, {\n        min: 14,\n        max: 14.25,\n        val: \"#6f049b\"\n      }, {\n        min: 14.25,\n        max: 14.5,\n        val: \"#690492\"\n      }, {\n        min: 14.5,\n        max: 14.75,\n        val: \"#620389\"\n      }, {\n        min: 14.75,\n        max: 15,\n        val: \"#550177\"\n      }, {\n        min: 15,\n        max: 10000,\n        val: \"#490066\"\n      }]\n    };\n  }\n\n  componentDidMount() {\n    //eslint-disable-next-line\n    this.map = new AMap.Map('container', {\n      zoom: 4,\n      //地图初始化显示时候的缩放程度\n      showLabel: false,\n      //不显示地图文字标记\n      center: [124.25, 26.25] //设置地图中心点坐标\n\n    });\n    const url = 'test.json';\n    const polygonValue = {};\n    const waveHeight = {};\n    axios.get(url).then(response => {\n      this.polygonValue = response.data;\n      console.log(this.polygonValue);\n      axios.get('wave-height.json').then(res => {\n        this.waveHeight = res.data;\n        console.log(this.waveHeight);\n      });\n\n      for (var i = 0; i < this.polygonValue.features.length; i++) {\n        var polygonArr = new Array(); //创建多边形坐标数组\n\n        var polygonNumberId = this.polygonValue.features[i].properties.Number;\n        polygonArr.push(this.polygonValue.features[i].geometry.coordinates[0]);\n\n        for (var j = 0; j < 61; j++) {\n          if (this.waveHeight.data[i].waveheightt >= this.state.waveLevel[j].min && this.waveHeight.data[i].waveheightt < ithis.state.waveLevel[j].max) {\n            let level = j;\n            break;\n          }\n        } //eslint-disable-next-line\n\n\n        var polygon = new AMap.Polygon({\n          path: polygonArr,\n          strokeColor: \"#ff0000\",\n          //线颜色\n          strokeOpacity: 0.15,\n          //线透明度\n          strokeWeight: 1,\n          //线宽\n          fillColor: \"#26defa\",\n          //填充色\n          fillOpacity: 0.9 //填充透明度\n\n        });\n        this.map.add(polygon);\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"null\");\n  }\n\n}\n\nexport default WebMapDemo;","map":{"version":3,"sources":["/Users/hanshuai/Desktop/简报/weather-report/src/map-demo.js"],"names":["React","Component","axios","WebMapDemo","constructor","props","state","waveLevel","min","max","val","componentDidMount","map","AMap","Map","zoom","showLabel","center","url","polygonValue","waveHeight","get","then","response","data","console","log","res","i","features","length","polygonArr","Array","polygonNumberId","properties","Number","push","geometry","coordinates","j","waveheightt","ithis","level","polygon","Polygon","path","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","add","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from 'axios';\n\nclass WebMapDemo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            waveLevel: [{min:-50,max:0.25,val:\"#0cecfa\"},\n                {min:0.25,max:0.5,val:\"#0cd6fa\"},\n                {min:0.5,max:0.75,val:\"#0cc5fa\"},\n                {min:0.75,max:1,val:\"#0cb4fa\"},\n                {min:1,max:1.25,val:\"#0ca3fa\"},\n                {min:1.25,max:1.5,val:\"#0c98fa\"},\n                {min:1.5,max:1.75,val:\"#0c8dfa\"},\n                {min:1.75,max:2,val:\"#0c7cfa\"},\n                {min:2,max:2.25,val:\"#0c71fa\"},\n                {min:2.25,max:2.5,val:\"#0c60fa\"},\n                {min:2.5,max:2.75,val:\"#0c49fa\"},\n                {min:2.75,max:3,val:\"#f8fd30\"},\n                {min:3,max:3.25,val:\"#faf123\"},\n                {min:3.25,max:3.5,val:\"#fce515\"},\n                {min:3.5,max:3.75,val:\"#fddf0f\"},\n                {min:3.75,max:4,val:\"#ffcc00\"},\n                {min:4,max:4.25,val:\"#ffba00\"},\n                {min:4.25,max:4.5,val:\"#fe9e00\"},\n                {min:4.5,max:4.75,val:\"#f78b00\"},\n                {min:4.75,max:5,val:\"#f17700\"},\n                {min:5,max:5.25,val:\"#ef7100\"},\n                {min:5.25,max:5.5,val:\"#f56925\"},\n                {min:5.5,max:5.75,val:\"#f55f16\"},\n                {min:5.75,max:6,val:\"#f35508\"},\n                {min:6,max:6.25,val:\"#e84c00\"},\n                {min:6.25,max:6.5,val:\"#fd002a\"},\n                {min:6.5,max:6.75,val:\"#f30128\"},\n                {min:6.75,max:7,val:\"#ee0127\"},\n                {min:7,max:7.25,val:\"#e40225\"},\n                {min:7.25,max:7.5,val:\"#d60323\"},\n                {min:7.5,max:7.75,val:\"#c50f2b\"},\n                {min:7.75,max:8,val:\"#ac182b\"},\n                {min:8,max:8.25,val:\"#9d1626\"},\n                {min:8.25,max:8.5,val:\"#931522\"},\n                {min:8.5,max:8.75,val:\"#8a141f\"},\n                {min:8.75,max:9,val:\"#7c121a\"},\n                {min:9,max:9.25,val:\"#6d1015\"},\n                {min:9.25,max:9.5,val:\"#fe229a\"},\n                {min:9.5,max:9.75,val:\"#f6209f\"},\n                {min:9.75,max:10,val:\"#f01ea1\"},\n                {min:10,max:10.25,val:\"#ed1ea3\"},\n                {min:10.25,max:10.5,val:\"#e81ca5\"},\n                {min:10.5,max:10.75,val:\"#e01aaa\"},\n                {min:10.75,max:11,val:\"#d918ad\"},\n                {min:11,max:11.25,val:\"#d317b1\"},\n                {min:11.25,max:11.5,val:\"#ce16b3\"},\n                {min:11.5,max:11.75,val:\"#c613b7\"},\n                {min:11.75,max:12,val:\"#bd11bc\"},\n                {min:12,max:12.25,val:\"#b610bf\"},\n                {min:12.25,max:12.5,val:\"#b00ec2\"},\n                {min:12.5,max:12.75,val:\"#ab0dc5\"},\n                {min:12.75,max:13,val:\"#9e09cc\"},\n                {min:13,max:13.25,val:\"#9507d0\"},\n                {min:13.25,max:13.5,val:\"#8d08c4\"},\n                {min:13.5,max:13.75,val:\"#8205b6\"},\n                {min:13.75,max:14,val:\"#7b07ab\"},\n                {min:14,max:14.25,val:\"#6f049b\"},\n                {min:14.25,max:14.5,val:\"#690492\"},\n                {min:14.5,max:14.75,val:\"#620389\"},\n                {min:14.75,max:15,val:\"#550177\"},\n                {min:15,max:10000,val:\"#490066\"}]\n        }\n    }\n\n        componentDidMount() {\n            //eslint-disable-next-line\n            this.map = new AMap.Map('container', {\n                zoom: 4,//地图初始化显示时候的缩放程度\n                showLabel: false, //不显示地图文字标记\n                center: [124.25, 26.25]//设置地图中心点坐标\n            });\n\n\n            const url = 'test.json'\n            const polygonValue = {}\n            const waveHeight = {}\n            axios.get(url).then(\n                response => {\n                    this.polygonValue = response.data\n                    console.log(this.polygonValue)\n                    axios.get('wave-height.json').then(\n                        res => {\n                            this.waveHeight = res.data\n                            console.log(this.waveHeight)\n                        }\n                    )\n                    for (var i = 0; i < this.polygonValue.features.length; i++) {\n                        var polygonArr = new Array();//创建多边形坐标数组\n                        var polygonNumberId = this.polygonValue.features[i].properties.Number;\n                        polygonArr.push(this.polygonValue.features[i].geometry.coordinates[0]);\n                            for (var j=0; j<61; j++) {\n                                if (this.waveHeight.data[i].waveheightt>=this.state.waveLevel[j].min && this.waveHeight.data[i].waveheightt<ithis.state.waveLevel[j].max) {\n                                    let level = j;\n                                    break;\n                                }\n                            }\n\n                        //eslint-disable-next-line\n                        var polygon = new AMap.Polygon({\n                            path: polygonArr,\n                            strokeColor: \"#ff0000\", //线颜色\n                            strokeOpacity: 0.15, //线透明度\n                            strokeWeight: 1,    //线宽\n                            fillColor: \"#26defa\", //填充色\n                            fillOpacity: 0.9 //填充透明度\n                        })\n                        this.map.add(polygon)\n                    }\n                }\n            )\n\n\n        };\n\n\n        render()\n        {\n            return (\n                <div>\n                    null\n                </div>\n            )\n        }\n}\n\nexport default WebMapDemo;"]},"metadata":{},"sourceType":"module"}